// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

// Nota: Este projeto usa exclusivamente MongoDB como banco de dados.
// Todas as tabelas e modelos são armazenados no MongoDB.

// Modelo de Usuário
model User {
  id                    String   @id @default(uuid()) @map("_id")
  phoneNumber           String   @unique
  firstName             String?
  lastName              String?
  name                  String?  // Nome completo para importação
  email                 String?  @unique
  password              String?
  role                  Role     @default(USER)
  position              String?
  avatar                String?
  department            String?
  verificationCode      String?
  verificationCodeExpires DateTime?
  inviteCode            String?  // Código de convite para novos usuários
  inviteSent            Boolean? // Se o convite foi enviado
  inviteSentAt          DateTime? // Quando o convite foi enviado
  inviteAccepted        Boolean? // Se o convite foi aceito
  inviteAcceptedAt      DateTime? // Quando o convite foi aceito
  passwordLastChanged   DateTime?
  active                Boolean  @default(true)
  accessHistory         Json?
  accessPermissions     Json?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

// Enum para Roles de Usuário
enum Role {
  USER
  ADMIN
  MANAGER
}

// Modelo de Configuração do Site
model SiteConfig {
  id            String   @id @default("default") @map("_id")
  title         String
  description   String
  logo          String
  favicon       String
  primaryColor  String
  secondaryColor String
  companyName   String
  contactEmail  String
  footerText    String
  updatedAt     DateTime @updatedAt
}

// Modelo de Card do Dashboard
model Card {
  id              String   @id @default(uuid()) @map("_id")
  title           String
  description     String
  href            String
  icon            String
  color           String
  hoverColor      String
  external        Boolean  @default(false)
  enabled         Boolean  @default(true)
  order           Int
  // Permissões
  adminOnly       Boolean  @default(false)
  managerOnly     Boolean  @default(false)
  allowedRoles    Json?    // Array de roles permitidas
  allowedUserIds  Json?    // Array de IDs de usuários permitidos
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// Modelo de Item de Menu
model MenuItem {
  id              String   @id @default(uuid()) @map("_id")
  href            String
  label           String
  icon            String
  external        Boolean  @default(false)
  enabled         Boolean  @default(true)
  order           Int
  // Permissões
  adminOnly       Boolean  @default(false)
  managerOnly     Boolean  @default(false)
  allowedRoles    Json?    // Array de roles permitidas
  allowedUserIds  Json?    // Array de IDs de usuários permitidos
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// Modelo de Documento
model Document {
  id              String   @id @default(uuid()) @map("_id")
  title           String
  description     String
  category        String
  language        String
  file            String
  enabled         Boolean  @default(true)
  order           Int
  // Permissões
  adminOnly       Boolean  @default(false)
  managerOnly     Boolean  @default(false)
  allowedRoles    Json?    // Array de roles permitidas
  allowedUserIds  Json?    // Array de IDs de usuários permitidos
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// Modelo de Notícia
model News {
  id              String   @id @default(uuid()) @map("_id")
  title           String
  description     String
  content         String   // Conteúdo completo da notícia
  date            DateTime
  file            String?  // Arquivo opcional (PDF, etc)
  enabled         Boolean  @default(true)
  featured        Boolean  @default(false)
  category        String
  author          String
  thumbnail       String?  // Imagem de miniatura
  coverImage      String?  // Imagem de capa
  tags            Json?    // Array de tags
  // Permissões
  adminOnly       Boolean  @default(false)
  managerOnly     Boolean  @default(false)
  allowedRoles    Json?    // Array de roles permitidas
  allowedUserIds  Json?    // Array de IDs de usuários permitidos
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// Modelo de Reembolso
model Reimbursement {
  id            String   @id @default(uuid()) @map("_id")
  nome          String
  email         String
  telefone      String
  cpf           String
  cargo         String
  centroCusto   String
  data          DateTime
  tipoReembolso String
  iconeReembolso String?
  descricao     String
  valorTotal    String
  moeda         String   @default("BRL")
  metodoPagamento String
  banco         String?
  agencia       String?
  conta         String?
  pixTipo       String?
  pixChave      String?
  comprovantes  Json
  observacoes   String?
  protocolo     String   @unique
  status        String   @default("pendente")
  dataCriacao   DateTime @default(now())
  dataAtualizacao DateTime @updatedAt
  historico     Json
}

// Modelo de Usuário Autorizado
model AuthorizedUser {
  id          String   @id @default(uuid()) @map("_id")
  email       String?  @unique
  phoneNumber String?  @unique
  inviteCode  String?  @unique
  domain      String?
  status      String   @default("active")
  expiresAt   DateTime?
  maxUses     Int?
  usedCount   Int      @default(0)
  createdBy   String?
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
